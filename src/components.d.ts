/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface RfsCarouselTxt {
    }
    interface RfsCarouselTxtItem {
    }
    interface RfsHeader {
        /**
          * Define se a navbar será escura. Caso falso = claro.
         */
        "dark": boolean;
        /**
          * Define se será fixa no topo sem ocupar espaço (Ao usar scroll de tela)
         */
        "fixed": boolean;
        /**
          * Path (caminho) da logo
         */
        "logo": string;
        /**
          * Referente menu do mobile. Caso falso, menu virá da esquerda para a direita.
         */
        "rtl": boolean;
        /**
          * Define se a navbar será transparente no topo da página.
         */
        "smoothTop": boolean;
        /**
          * Define se será fixa no topo ocupando espaço (Ao usar scroll de tela)
         */
        "sticky": boolean;
    }
    interface RfsIntro {
    }
    interface RfsNavItem {
        /**
          * Define se é um botão de ação.
         */
        "action": boolean;
        /**
          * Define se o nav-item está ativo no momento
         */
        "active": boolean;
        /**
          * Define a âncora do botão.
         */
        "target": string;
    }
}
declare global {
    interface HTMLRfsCarouselTxtElement extends Components.RfsCarouselTxt, HTMLStencilElement {
    }
    var HTMLRfsCarouselTxtElement: {
        prototype: HTMLRfsCarouselTxtElement;
        new (): HTMLRfsCarouselTxtElement;
    };
    interface HTMLRfsCarouselTxtItemElement extends Components.RfsCarouselTxtItem, HTMLStencilElement {
    }
    var HTMLRfsCarouselTxtItemElement: {
        prototype: HTMLRfsCarouselTxtItemElement;
        new (): HTMLRfsCarouselTxtItemElement;
    };
    interface HTMLRfsHeaderElement extends Components.RfsHeader, HTMLStencilElement {
    }
    var HTMLRfsHeaderElement: {
        prototype: HTMLRfsHeaderElement;
        new (): HTMLRfsHeaderElement;
    };
    interface HTMLRfsIntroElement extends Components.RfsIntro, HTMLStencilElement {
    }
    var HTMLRfsIntroElement: {
        prototype: HTMLRfsIntroElement;
        new (): HTMLRfsIntroElement;
    };
    interface HTMLRfsNavItemElement extends Components.RfsNavItem, HTMLStencilElement {
    }
    var HTMLRfsNavItemElement: {
        prototype: HTMLRfsNavItemElement;
        new (): HTMLRfsNavItemElement;
    };
    interface HTMLElementTagNameMap {
        "rfs-carousel-txt": HTMLRfsCarouselTxtElement;
        "rfs-carousel-txt-item": HTMLRfsCarouselTxtItemElement;
        "rfs-header": HTMLRfsHeaderElement;
        "rfs-intro": HTMLRfsIntroElement;
        "rfs-nav-item": HTMLRfsNavItemElement;
    }
}
declare namespace LocalJSX {
    interface RfsCarouselTxt {
    }
    interface RfsCarouselTxtItem {
    }
    interface RfsHeader {
        /**
          * Define se a navbar será escura. Caso falso = claro.
         */
        "dark"?: boolean;
        /**
          * Define se será fixa no topo sem ocupar espaço (Ao usar scroll de tela)
         */
        "fixed"?: boolean;
        /**
          * Path (caminho) da logo
         */
        "logo"?: string;
        /**
          * Referente menu do mobile. Caso falso, menu virá da esquerda para a direita.
         */
        "rtl"?: boolean;
        /**
          * Define se a navbar será transparente no topo da página.
         */
        "smoothTop"?: boolean;
        /**
          * Define se será fixa no topo ocupando espaço (Ao usar scroll de tela)
         */
        "sticky"?: boolean;
    }
    interface RfsIntro {
    }
    interface RfsNavItem {
        /**
          * Define se é um botão de ação.
         */
        "action"?: boolean;
        /**
          * Define se o nav-item está ativo no momento
         */
        "active"?: boolean;
        /**
          * Define a âncora do botão.
         */
        "target"?: string;
    }
    interface IntrinsicElements {
        "rfs-carousel-txt": RfsCarouselTxt;
        "rfs-carousel-txt-item": RfsCarouselTxtItem;
        "rfs-header": RfsHeader;
        "rfs-intro": RfsIntro;
        "rfs-nav-item": RfsNavItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "rfs-carousel-txt": LocalJSX.RfsCarouselTxt & JSXBase.HTMLAttributes<HTMLRfsCarouselTxtElement>;
            "rfs-carousel-txt-item": LocalJSX.RfsCarouselTxtItem & JSXBase.HTMLAttributes<HTMLRfsCarouselTxtItemElement>;
            "rfs-header": LocalJSX.RfsHeader & JSXBase.HTMLAttributes<HTMLRfsHeaderElement>;
            "rfs-intro": LocalJSX.RfsIntro & JSXBase.HTMLAttributes<HTMLRfsIntroElement>;
            "rfs-nav-item": LocalJSX.RfsNavItem & JSXBase.HTMLAttributes<HTMLRfsNavItemElement>;
        }
    }
}
